#!/bin/bash

# opt 1 model=M has no value RETURN model
# opt 2 model=M RETURN nothing for success or error
# opt 3 model=M RETURN digest 

# use randmoness to automatically select a model for recurrink to process
get_random_model() {
  model_path=$(ls -1 models/*.csv| sort -R| tail -1)
  model=${model_path%.*}  # retain the part before the colon
  model=${model##*/}  # retain the part after the last slash
}

get_cells() {
  cells=$(./recurrink.py -m ${model} --output CSV --random)
  if [ -z "${cells}" ]
  then
    echo "cannot find cells for ${model}"
    exit 1
  fi
}

update_svg() {
  for cell in ${cells}
  do
    echo -n "$cell" 
    attrs=$(./recurrink.py -m ${model} --cell ${cell})
    a=($attrs)  # convert to array with the magic of IFS separator
    shape=${a[2]} # elems 0,1 are cell and model names
    width=${a[3]}
    facing=${a[4]}
    size=${a[5]}
    bgcol=${a[6]}
    top=${a[7]}
    # update cells
    #echo "${cell},${model},${shape},${width},${facing},${size},${bgcol},${top}"
  ./effect.py \
     --id ${cell}1 \
     --output /tmp/${model}.svg \
     --shape ${shape} \
     --width ${width} \
     --facing ${facing} \
     --size ${size} \
     --bg ${bgcol} \
     --top ${top} /tmp/${model}.svg
  done
}
usage() { 
  echo "Usage: $0 [-n new model ] [ -s scale ] [-m <model> -d get digest ] [ -m <model> -r make rink ] " 1>&2; exit 1; 
}

while getopts "m:nsd:r:" o; do
  case "${o}" in
    d)
      d=${OPTARG}
      ;;
    r)
      r=${OPTARG}
      ;;
    m)
      m=${OPTARG}
      ;;
    n)
      get_random_model
      n=${model}
      ;;
    s)
      s=1
      ;;
    *)
      usage
      ;;
  esac
done
shift $((OPTIND-1))

if [ -z "${n}" ] && [ -z "${m}" ] && [ -z "${s}" ]; then
    usage
fi

if [ -n "${n}" ]; then
  echo ${n}
elif [ -n "${m}" ] && [ "${d}" == 'none' ]; then
  model=$m
  if [ ! -f "/tmp/${model}.svg" ]
  then
    echo "File '$model.svg' not found in /tmp"
    exit 1
  else
    get_cells
    update_svg
    digest=$(./recurrink.py -m ${model} --output JSON --random)
    /bin/mv /tmp/${model}.svg ${digest}.svg
    echo ${digest}
  fi
elif [ -n "${m}" ] && [ -n "${d}" ]; then
  model=$m
  /bin/mv /tmp/${model}.svg ${d}.svg
elif [ -n "${m}" ] && [ "${r}" == 'none' ]; then
  echo $r
  model=$m
  ./recurrink.py -m ${model} --output RINK
elif [ -n "${m}" ] && [ -n "${r}" ]; then
  echo $r
  model=$m
  ./recurrink.py -m ${model} --output RINK --view $r
elif [ "${s}" -eq 1 ]; then
  # scaling is weighted in favour of 1:1
  declare -a a=(1.0 0.5 1.0 2.0 1.0)
  i=$((0 + $RANDOM % 5))
  echo ${a[$i]}
else
  usage
fi
